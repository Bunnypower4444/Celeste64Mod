@SolidClass = worldspawn : "World entity"
[
	skybox(string) : "SkyBox"
	snowAmount(float) : "Amount of Snow"
	snowDirection(vector) : "Snow move direction"
	music(string) : "Music"
	ambience(string) : "Ambience"
]

@SolidClass = Decoration : "Used for decoration, not for gameplay"
[

]

@SolidClass = FloatingDecoration : "Used for decoration, not for gameplay"
[

]

@PointClass size(-16 -16 0, 16 16 16) model({ "path": model }) = StaticProp : "Static Prop" 
[
	model(String) : "Model file path" : : "Set this to a 3D model file."
	radius(integer) : "Radius" : 6 : "Pushout Radius"
	height(integer) : "Height" : 12 : "Pushout Height"
]

@PointClass size(-16 -16 0, 16 16 32) = PlayerSpawn : "Player start position" 
[
	name(string) : "Name" : "Start"
]

@PointClass model({ "path": "Models/strawberry.glb", "scale": 12 }) = Strawberry : "Strawb Get!" 
[
	locked(integer) : "Locked" : 0
	targetname(string) : "Target Name"
	bubbleto(string) : "Bubble To" : : "If assigned, Strawberry will bubble the player"
	noUnlockSound(integer) : "Disable Unlock Sound"
]

@PointClass model({ "path": "Models/granny.glb", "scale": 12 }) = Granny : "She cool" 
[
]

@PointClass model({ "path": "Models/theo.glb", "scale": 12 }) = Theo : "He's rad" 
[
]

@PointClass model({ "path": "Models/badeline.glb", "scale": 12 }) = Badeline : "She's bad" 
[
]

@PointClass model({ "path": "Models/sign.glb", "scale": 12 }) = SignPost : "Says some stuff" 
[
	dialog(string) : "Dialog Entry"
	angle(integer) : "Sign Rotation"
]

@PointClass size(-8 -8 -8, 8 8 8) = Node : "Moving entity path node"
[
	targetname(string) : "Target Name"
]

@PointClass size(-16 -16 -16, 16 16 16) = Refill : "Refill's Maddy's dashes"
[
	double(integer) : "Double" : 0
]

@PointClass size(-16 -16 -16, 16 16 16) = Feather : "Lets Maddy fly for a short time"
[

]

@PointClass size(-16 -16 -16, 16 16 16) = PurpleOrb : "Bounces player up"
[
	target(string) : "Name of the next PurpleOrbNode (optional)"
	autoContinueTriggerID(string) : "ID of auto-continue AreaTrigger (optional)" : : "If set, the PurpleOrb will move to the next node when the trigger is entered"
	cutsceneTarget(string) : "Cutscene node" : : "If set, the purple orb will be a cutscene and the cutscene will finish when the player reaches the node's Z position"
]

@PointClass size(-16 -16 -16, 16 16 16) = PurpleOrbNode : "A path node for purple orbs"
[
	targetname(string) : "Name of the node"
	target(string) : "Name of the next PurpleOrbNode (optional)"
	autoContinueTriggerID(string) : "ID of auto-continue AreaTrigger (optional)" : : "If set, the PurpleOrb will move to the next node when the trigger is entered"
	cutsceneTarget(string) : "Cutscene node" : : "If set, the purple orb will be a cutscene and the cutscene will finish when the player reaches the node's Z position"
]

@PointClass size(-16 -16 -16, 16 16 16) = Cassette : "Warps to a B-Side challenge room"
[
	map(string) : "Map"
]

@PointClass size(-16 -16 -16, 16 16 16) = Coin : "Collect em all to open a gate block"
[

]

@PointClass size(-16 -16 -16, 16 16 16) = Chimney : "Pretty self-explanatory"
[

]

@PointClass model({ "path": "Models/spring_board.glb", "scale": 36 }) = Spring : "Bounces you..." 
[
	direction(string) : "What direction the spring bounces the player" : "up" : "up or side, 0 angle is -y direction"
	angle(integer) : "Rotation"
]

@SolidClass = TrafficBlock : "Moves to the node when the player is riding it"
[
	target(string) : "Target Node"
]

@SolidClass = FallingBlock : "Falls when player rides it"
[
   
]

@SolidClass = FloatyBlock : "Moves when player lands on it"
[
   
]

@SolidClass = GateBlock : "Opens when the player gets all the switches"
[
   target(string) : "Target Node"
   unlockGroup(string) : "Optional group of coins that needs to be collected"
]

@SolidClass = MovingBlock : "Moves back and forth constantly"
[
   target(string) : "Target Node"
   slow(integer) : "Go Slower"
]

@SolidClass = DashPuzzleBlock : "Stand on with the correct amount of dashes to activate"
[
	dashes(integer) : "Number of dashes required" : 2 : "This will not activate if the player's MAXIMUM dash count is greater than the required count (i.e. If you have 2 dashes by default, you can't activate a 1-dash platform even if you currently have 1 dash)"
]

@SolidClass = DeathBlock : "Invisible; Kills the Player when hit"
[
]

@SolidClass = SpikeBlock : "Visible; Kills the Player when hit"
[
]

@SolidClass = BreakBlock : "Dash to Break it"
[
	bounces(integer) : "Bounces" : : "If this block Bounces the player when broken"
	transparent(integer) : "Transparent" : : "Has transparent elements"
]

@SolidClass = CassetteBlock : "Toggles to the Music"
[
	startOn(integer) : "Start On" : : "If this block should start toggled on"
]

@SolidClass = SemiSolidPlatform : "Allows the player to pass through it going up"
[
	
]

@SolidClass = EndingArea : "Where the game ends"
[
	
]

@SolidClass = AreaTrigger : "An area that triggers events when the player enters and exits the area"
[
	id(string) : "ID of the area trigger"
]

@SolidClass = FixedCamera : "Lock Camera Position to a Target"
[
   target(string) : "Target Node"
]

@PointClass = IntroCar : "Intro Car ............. :)"
[

]